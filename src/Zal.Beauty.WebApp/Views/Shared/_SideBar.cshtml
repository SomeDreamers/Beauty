@using Zal.Beauty.WebApp.Configs
<div class="sidebar-menu toggle-others fixed">
    <div class="sidebar-menu-inner ps-container ps-active-y">
        <header class="logo-env">
            <div class="logo">
                <a href="/Home/Index" class="logo-expanded">
                    <img src="~/lib/xenon/assets/images/logo@2x.png" width="80" alt="" />
                </a>

                <a href="/Home/Index" class="logo-collapsed">
                    <img src="~/lib/xenon/assets/images/logo-collapsed@2x.png" width="40" alt="" />
                </a>
            </div>

            <!-- This will toggle the mobile menu and will be visible only on mobile devices -->
            <div class="mobile-menu-toggle visible-xs">
                <a href="#" data-toggle="user-info-menu">
                    <i class="fa-bell-o"></i>
                    <span class="badge badge-success">7</span>
                </a>

                <a href="#" data-toggle="mobile-menu">
                    <i class="fa-bars"></i>
                </a>
            </div>
        </header>

        <ul id="main-menu" class="main-menu">
            @{
                var userPermissionKeys = @Html.ViewContext.HttpContext.User.Identity.PermissionKeys();
                foreach (var Node1st in PermissionKeysMvcSetting.Nodes)
                {
                    //判断用户是否含有该节点下的权限
                    var hasPermission = false;
                    foreach (var Node2nd in Node1st.ChildNodes)
                    {
                        foreach (var permissionKey in Node2nd.PerMissionKeys)
                        {
                            if (userPermissionKeys.Contains(permissionKey))
                            {
                                hasPermission = true;
                                break;
                            }
                        }
                        if (hasPermission)
                        {
                            break;
                        }
                    }
                    //有权限则展现菜单
                    if (hasPermission)
                    {

                        var route = @Html.ViewContext.HttpContext.Request.Path.ToString();
                        var hasSelected = false;
                        foreach(var Node2nd in Node1st.ChildNodes)
                        {
                            if(Node2nd.ChildNodes.Find(c=>c.Route == route) != null)
                            {
                                hasSelected = true;
                                break;
                            }
                        }

                        <li class="@(hasSelected ? "active expanded" : "")">
                            <a href="#">
                                <i class="@Node1st.IconClass"></i>
                                <span class="title">@Node1st.Title</span>
                            </a>
                            <ul style="display: @(hasSelected ? "block" : "none");">
                                @foreach (var Node2nd in Node1st.ChildNodes)
                                {
                                    var hasChildPermission = false;
                                    foreach (var permissionKey in Node2nd.PerMissionKeys)
                                    {
                                        if (userPermissionKeys.Contains(permissionKey))
                                        {
                                            hasChildPermission = true;
                                            break;
                                        }
                                    }
                                    if (hasChildPermission)
                                    {
                                        var hasChildSeleted = Node2nd.ChildNodes.Find(c => c.Route == route) != null;
                                        <li class="@(hasChildSeleted ? "active" : "")">
                                            <a href="@Node2nd.ChildNodes[0].Route">
                                                <span class="title">@Node2nd.Title</span>
                                            </a>
                                        </li>
                                    }
                                }
                            </ul>
                        </li>
                    }
                }
            }
        </ul>
    </div>
</div>

